{"version":3,"sources":["services/api.js","pages/listaDeTapiocas/index.js","pages/formDeTapioca/index.js","routes.js","App.js","index.js"],"names":["api","axios","create","baseURL","ListaDeTapiocas","useState","tapiocas","setTapiocas","tapiocasFiltradas","setTapiocasFiltradas","loading","setLoading","FormatarTapioca","tapioca","recheio","preco","numero","toFixed","split","join","id","useEffect","a","async","get","response","listaFormatada","data","map","BuscarTapiocas","Heading","level","Cafeteria","TextInput","placeholder","onChange","e","filtro","target","value","filter","t","toLowerCase","includes","className","key","to","Footer","background","pad","justify","Button","icon","Add","label","FormTapioca","useParams","setRecheio","setPreco","redirect","setRedirect","title","Edit","BuscarTapioca","Box","width","direction","flex","primary","Trash","color","onClick","delete","Form","onSubmit","preventDefault","put","post","gap","FormField","required","FormPreviousLink","type","Save","Routes","basename","exact","path","App","Grommet","theme","global","font","family","size","height","full","tag","align","Text","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a7024e7.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'https://tapiocaria.azurewebsites.net/api'\n}); \n\nexport default api;","import React, { useState, useEffect } from 'react';\nimport { Box, TextInput, Button, Footer, Heading } from 'grommet';\nimport { Link } from 'react-router-dom';\nimport { Add, Cafeteria } from 'grommet-icons';\nimport api from '../../services/api';\nimport './styles.css';\n\nfunction ListaDeTapiocas() {\n\n    const [tapiocas, setTapiocas] = useState([]);\n    const [tapiocasFiltradas, setTapiocasFiltradas] = useState([]);\n    const [loading, setLoading] = useState('Carregando Tapiocas...');\n\n    function converterParaReal(numero) {\n        var numero = numero.toFixed(2).split('.');\n        numero[0] = \"R$ \" + numero[0].split(/(?=(?:...)*$)/).join('.');\n        return numero.join(',');\n    }\n\n\n    function FiltrarLista(e) {\n        const filtro = e.target.value;\n        setTapiocasFiltradas(tapiocas.filter(t => t.recheio.toLowerCase().includes(filtro)));\n    }\n\n    function FormatarTapioca(tapioca) {\n        return {\n            recheio: `Tapioca de ${tapioca.recheio}`,\n            preco: converterParaReal(tapioca.preco),\n            id: tapioca.id\n        }\n    }\n\n    async function BuscarTapiocas() {\n\n        const response = await api.get('/tapiocas');\n\n        const listaFormatada = response.data.map(FormatarTapioca);\n\n        setTapiocas(listaFormatada);\n        setTapiocasFiltradas(listaFormatada);\n        setLoading('');\n    }\n\n    useEffect(() => { BuscarTapiocas() }, []);\n\n    return (\n        <>\n            <Heading level='2'>\n                <Cafeteria />\n                Cardápio de Tapiocas\n            </Heading>\n\n\n            <TextInput placeholder='Pesquisar' onChange={FiltrarLista} />\n\n            <span> {loading} </span>\n\n            <div className=\"list\">\n                {\n                    tapiocasFiltradas.map(tapioca => (\n                        <Link key={tapioca.id} to={`/tapiocas/editar/${tapioca.id}`} className='list-item'>\n                            <div> {tapioca.recheio} </div>\n                            <div className='texto-secundario'> {tapioca.preco}</div>\n                        </Link>\n                    ))\n                }\n            </div>\n\n\n            <Footer background=\"brand\" pad=\"medium\" justify='end'>\n                <Link to='/tapiocas/criar'>\n                    <Button\n                        icon={<Add />}\n                        label=\"Adicionar Tapioca\"\n                    />\n                </Link>\n            </Footer>\n\n        </>\n\n    );\n}\n\nexport default ListaDeTapiocas;","import { Button, Heading, Form, FormField, Box, TextInput, Footer } from 'grommet';\nimport { FormPreviousLink, Save, Add, Trash, Edit } from 'grommet-icons';\nimport React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useParams } from 'react-router'\nimport api from '../../services/api';\n\nfunction FormTapioca() {\n\n    const { id } = useParams()\n    const [recheio, setRecheio] = useState('');\n    const [preco, setPreco] = useState('');\n    const [redirect, setRedirect] = useState('');\n    const title = (id) ? (<span><Edit/> Editar Tapioca</span>) :  (<span><Add/> Adicionar Tapioca</span>);\n\n    async function ExcluirTapioca() {\n        await api.delete('/tapiocas/' + id);\n        setRedirect('/');\n    }\n\n    async function BuscarTapioca() {\n\n        if (id) {\n            let response = await api.get('/tapiocas/' + id);\n            let tapioca = response.data;\n\n            setRecheio(tapioca.recheio);\n            setPreco(tapioca.preco);\n        }\n    }\n\n    async function SalvarTapioca(e) {\n\n        e.preventDefault();\n\n        let tapioca = { id, recheio, preco };\n\n        if (id) {\n            await api.put('/tapiocas/' + id, tapioca);\n        }\n        else {\n            await api.post('/tapiocas', tapioca);\n        }\n        \n        setRedirect('/');\n    }\n\n    useEffect(() => { BuscarTapioca() }, []);\n\n    if (redirect) {\n        return (<Redirect to={redirect} />)\n    }\n\n    return (\n        <>\n            <Box width='large'>\n\n                <Box direction='row'>\n\n                    <Box flex='grow'>\n                        <Heading level='2' pad='medium' >\n                            {title}\n                        </Heading>\n                    </Box>\n\n                    <Box justify='center'>\n                        <Button\n                            primary\n                            icon={<Trash />}\n                            label='Excluir'\n                            color='status-critical'\n                            onClick={ExcluirTapioca}\n                        />\n                    </Box>\n\n                </Box>\n\n                <Form onSubmit={SalvarTapioca}>\n\n                    <Box gap='medium'>\n\n                        <FormField label=\"Recheio\" >\n                            <TextInput required value={recheio} onChange={e => setRecheio(e.target.value)} />\n                        </FormField>\n\n                        <FormField label=\"Preço\" >\n                            <TextInput required value={preco} onChange={e => setPreco(e.target.value)} />\n                        </FormField>\n\n                        <Footer background=\"brand\" pad=\"medium\" justify='around'>\n\n                            <Link to='/'>\n                                <Button\n                                    icon={<FormPreviousLink />}\n                                    label='Cancelar'\n                                />\n                            </Link>\n\n                            <Button type=\"submit\" primary label=\"Salvar\" icon={<Save />} />\n\n                        </Footer>\n\n\n                    </Box>\n\n                </Form>\n            </Box>\n\n\n\n        </>\n    );\n}\n\nexport default FormTapioca;\n\n","import React from 'react';\nimport ListaDeTapiocas from './pages/listaDeTapiocas'\nimport FormDeTapioca from './pages/formDeTapioca';\nimport { HashRouter, Route} from 'react-router-dom';\n\nconst Routes = () => (\n    <>\n        <HashRouter basename='/'>\n\n            <Route exact path=\"/\">\n                <ListaDeTapiocas />\n            </Route>\n\n            <Route exact path=\"/tapiocas/criar\">\n                <FormDeTapioca />\n            </Route>\n\n            <Route exact path=\"/tapiocas/editar/:id\">\n                <FormDeTapioca />\n            </Route>\n\n        </HashRouter>\n    </>\n);\n\nexport default Routes;","import React from 'react';\nimport { Grommet, Heading, Text, Box } from 'grommet';\nimport Routes from './routes';\n\nfunction App() {\n\n  const theme = {\n    global: {\n      font: {\n        family: 'Roboto',\n        size: '18px',\n        height: '20px',\n      },\n    },\n  };\n\n  return (\n    <Grommet theme={theme} full>\n\n      <Box tag='header' align='center' background='brand'>\n\n        <Heading>Tapiocaria React</Heading>\n        <Text>CRUD de tapiocas feito com react</Text>\n\n      </Box>\n\n      <Box pad=\"large\">\n        <Routes />\n      </Box>\n\n    </Grommet>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root')\n);"],"sourceRoot":""}